@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";

@layer base {
	html {
		-webkit-tap-highlight-color: transparent;
	}

	body {
		@apply text-sm text-zinc-800 bg-white;
	}

	img {
		@apply select-none;
		-webkit-user-drag: none;
	}

	bar-rating {
		@apply block;
		--br-font-size: 1em !important;

		&[disabled] {
			@apply select-none pointer-events-none grayscale brightness-150;
		}

		.mat-icon {
			@apply block ~'w-[1em]' ~'h-[1em]';
			font-size: var(--br-font-size);
		}
	}
}

.mat-mdc-dialog-surface {
	@apply p-6;
}

.mat-mdc-tab-header {
	@apply border-y border-gray-200 select-none;
}
.mat-mdc-tab-header-pagination {
	&:not(.mat-mdc-tab-header-pagination-disabled) {
		box-shadow: 0 2px 4px -1px #0003, 0 4px 5px #00000024, 0 1px 10px #0000001f;
	}
}

.mdc-tooltip {
	@apply text-xs select-none;
}

.mat-mdc-menu-item {
	@apply ~'!min-h-[2.25rem]';

	.mat-icon {
		@apply mt-0;
	}
}

.mat-button-base {
	min-width: unset !important;

	.mat-icon {
		@apply ~'-mt-0.5';
	}

	&[size="small"] {
		@apply !text-xs/6 !py-0 !px-1;

		.mat-icon {
			@apply !w-4 !h-4 !text-base/none;
		}
	}
}

.mat-checkbox:not(.mat-button-disabled) {
	@apply rounded border border-black/12 text-center overflow-visible;
	padding: 0 15px;
	line-height: 34px;
	min-width: 64px;
}

.mat-stroked-button,
.mat-checkbox {
	@apply -skew-x-10 origin-center;

	& > .mat-button-wrapper,
	& > .mat-checkbox-layout {
		@apply block skew-x-10 origin-center;
	}
}

.mat-color(@color, @text: theme("colors.white")) {
	&.mat-stroked-button {
		border-color: @color;
		color: @color;
		.mat-button-focus-overlay {
			background-color: @color;
		}
		&.button-selected {
			background-color: @color;
			color: @text;
			border-left-color: @text;
			border-right-color: @text;
		}
	}
}

// Bullet Type Colors
.mat-Explosion {
	.mat-color(theme("colors.Explosion"));
}
.mat-Pierce {
	.mat-color(theme("colors.Pierce"));
}
.mat-Mystic {
	.mat-color(theme("colors.Mystic"));
}
.mat-Sonic {
	.mat-color(theme("colors.Sonic"));
}

// Armor Type Colors
.mat-LightArmor {
	.mat-color(theme("colors.LightArmor"));
}
.mat-HeavyArmor {
	.mat-color(theme("colors.HeavyArmor"));
}
.mat-Unarmed {
	.mat-color(theme("colors.Unarmed"));
}
.mat-ElasticArmor {
	.mat-color(theme("colors.ElasticArmor"));
}

// Squad Type Colors
.mat-Main {
	.mat-color(theme("colors.Main"));
}
.mat-Support {
	.mat-color(theme("colors.Support"));
}

.mat-Terrain {
	.mat-color(theme("colors.Terrain"));
}

@layer components {
	.actionbar {
		@apply flex flex-wrap items-center gap-2 my-3 px-2;
	}

	.actionbar-start {
		@apply flex flex-wrap items-center gap-2 mr-auto justify-start;
	}

	.actionbar-end {
		@apply flex flex-wrap items-center gap-2 ml-auto justify-end;
	}
}
